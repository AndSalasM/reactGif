{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","warn","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAhBU,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAGdO,QAAQC,KAAK,mBACbR,EAAc,MAOlB,SACI,uBACIS,KAAO,OACPC,MAASX,EACTY,SAxBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,8BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0DAE4CC,UAAUH,GAFtD,sDAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAK3CT,QAAQsB,IAAIP,GAhBO,kBAiBZA,GAjBY,4CAAH,sDCEPQ,EAAc,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,mCACI,qBAAIe,UAAU,0DAAd,UACI,qBAAKC,IAAMhB,EAAKiB,IAAKP,IACrB,4BAAIA,UCFPQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAKrB,ECLuB,SAACA,GAExB,MAA0BhB,mBAAS,CAC/BuB,KAAO,GACPc,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAdAC,qBAAU,WACLzB,EAAQC,GACPyB,MAAK,SAAAC,GAEHH,EAAS,CACLhB,KAAOmB,EACPL,SAAU,SAKnB,CAACrB,IAGGsB,EDlBwBK,CAAa3B,GAA/Ba,EAAb,EAAQN,KAAYc,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKrB,IACJqB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAIQJ,EAAOJ,KAAI,SAAAC,GAAG,OAEV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAuBkB,IAAOlB,EAAIC,eElB7CkB,EAAe,WAGxB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAGQ+C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADHA,YCnB/B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.807c3cff.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSumit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats=>[ inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }else{\r\n            console.warn('Eres un pendejo');\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit = {handleSumit}>\r\n            <input \r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n                />\r\n            \r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n}","export const getGifs = async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=3HOqXymuM6XO005LxiHhQn2bVOeFXWL6`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n        \r\n    })\r\n\r\n    console.log(gifs);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <>\r\n            <li className=\"card animate__animated animate__flash animate__delay-2s\">\r\n                <img src ={url} alt={title} />\r\n                <p>{title}</p>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    //getGifs();\r\n\r\n    const { data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                \r\n            \r\n                {\r\n                    images.map(img=> (\r\n                    \r\n                        <GifGridItem {...img}  key = {img.id} />\r\n                    ))\r\n                }\r\n                \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs =(category)=>{\r\n    \r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading : true,\r\n    });\r\n\r\n    \r\n    \r\n    useEffect(()=>{\r\n         getGifs(category)\r\n         .then(imgs=>{\r\n\r\n            setstate({\r\n                data : imgs,\r\n                loading : false,\r\n            });\r\n\r\n        })\r\n        \r\n    }, [category])\r\n\r\n        \r\n    return state;\r\n\r\n} ","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /*const handleAdd = ()=>{\r\n        setCategories([...categories, 'No Game No Life'])\r\n    }*/\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n               \r\n                {\r\n                    categories.map(category=> \r\n                        <GifGrid \r\n                        key = {category}\r\n                        category={category}/>\r\n                    )\r\n                }\r\n                \r\n            </ol>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}